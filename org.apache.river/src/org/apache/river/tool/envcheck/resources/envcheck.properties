#/*
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#*/

reporter.info=INFO:
reporter.warning=WARNING:
reporter.error=ERROR:
reporter.source=Source:

envcheck.noconfig=no configuration file for envcheck
envcheck.badconfig=Problem with envcheck's configuration file
envcheck.pluginfailure=problem loading plugins
envcheck.nossdesc=No ServiceDescriptors in the service starter configuration
envcheck.ssdescfailed=Failure processing service starter configuration
envcheck.subtaskex=Exception thrown by subprocess: {0}
envcheck.badlevel=Invalid level argument
envcheck.nojavacmd=First non-option must be a java command
envcheck.nocmdargs=No non-option arguments supplied
envcheck.noexecutable=No main class or executable jar specified
envcheck.illegalopt=Illegal command line option: {0}
envcheck.emptyconfig=No accessible descriptors in the \
		     service starter configuration
envcheck.summaryseparator=------------------------------------------
envcheck.warningheader=Total Warnings: 
envcheck.errorheader=Total Errors: 
envcheck.noplugin=Plugin file not found: {0}
envcheck.missingclasspath=The command being analyzed must invoke an executable \
                          jar file or define a classpath via the -cp or \
                          -classpath option
envcheck.usage=args:\n\
                    \t-traces\n\
                    \t-explain\n\
                    \t-level <info|warning|error>\n\
                    \t-plugin <JAR file>\n\
                    \t-security\n\
                    \tthe command line to process

util.cantresolve=Cannot resolve {0} path from the name: {1}"
util.notexist={0} does not exist: {1}
util.isdir={0} is a directory: {1}
util.cantread="Cannot read {0}: {1}
util.cantreadURL="Cannot read {1} URL: {0}
util.undef=No {0} defined

abstractPlugin.nullvalue=Unexpected null value returned by subtask
abstractPlugin.unknownObject=Unexpected object returned by subtask: {0}
abstractPlugin.excReturn=Unexpected exception thrown by subtask